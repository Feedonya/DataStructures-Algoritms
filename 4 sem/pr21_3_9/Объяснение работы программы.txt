За основу бинарного дерева взял дерево с курса.

Добавил к Node новое поле counter, которое содержит количество узлов в поддереве с корнем в данном узле.

Высота высчитывается как 1 + максимум из высот левого и правого поддеревьев.

CountNodes - для посчета числа узлов в дереве.

CanBalanceWithAdditions - опишу алгоритм подробнее:
1) инициализируем пустой список possibleValues
2) вычисляем минимальное кол-во узлов для полного бинарного дерева текущей высоты minNodesForHeight = 2^currentHeight - 1
3) Если currentNodes + n < minNodesForHeight, балансировка невозможна (возвращает false).
4) Вычисляет, сколько узлов нужно добавить: nodesToAdd = minNodesForHeight - currentNodes.
Если nodesToAdd <= n:
5)Вызывает CollectPossibleValues для сбора допустимых диапазонов значений.
Возвращает true.
Иначе возвращает false.

CollectPossibleValues - 
1) Если узел null, метод завершается.
2) Для каждого узла добавляет два диапазона:
2.1) (r.inf - 1, r.inf): Значения, которые можно добавить в левое поддерево (меньше текущего узла).
2.2) (r.inf, r.inf + 1): Значения, которые можно добавить в правое поддерево (больше текущего узла).
3) Рекурсивно вызывает себя для левого и правого поддеревьев.

